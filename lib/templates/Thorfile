# Sign up for AWS credentials at http://aws.amazon.com/, and learn how to
# upload your own public ssh key at http://alestic.com/2010/10/ec2-ssh-keys.
# Use environment variables in this file if you share it with others.

require 'breeze'

Breeze::CONFIGURATION = {

  # Access credentials are needed for all tasks.
  :cloud_service => {
    :provider => 'AWS',
    :aws_access_key_id => 'YOUR-ACCESS-KEY-ID',
    :aws_secret_access_key => 'YOUR-SECTET-ACCESS-KEY'
  },

  # Remote and upload commands are required in order to create a server image or deploy
  # an application. Arguments marked with %{} are automatically replaced when the
  # commands are used. Use "ssh -i /path/to/key" if not using your default ssh key.
  :remote_command => "ssh ubuntu@%{host} '%{command}'",
  :upload_command => 'rsync -v %{file_pattern} ubuntu@%{host}:%{remote_path}',

  # Default server options are needed when launching new servers.
  :default_server_options => {
    :image_id           => 'YOUR-PRIVATE-AMI-OR-A-PUBLIC-ONE',
    :key_name           => 'THE-NAME-OF-YOUR-KEYPAIR', # http://alestic.com/2010/10/ec2-ssh-keys
    :flavor_id          => 't1.micro', # t1.micro m1.small c1.medium ...
    :availability_zone  => 'us-east-1a', # us-west-1a eu-west-1a ap-southeast-1a
    :user_data_file     => nil
  },

  # Override default_server_options when building your own private server image:
  :create_image_options => {
    :image_id => 'ami-ccf405a5', # a base AMI from http://alestic.com
    :root_device_size => 15 # in GB
  },

  # machine images owned by this account are included in list:images (provided that you have access to them)
  :image_owner => 'YOUR-ACCOUNT-ID-WITHOUT-DASHES', # canonical: '099720109477'

  # db configuration is required in order to use Amazon RDS
  :db_region => 'us-east-1', # us-west-1 eu-west-1 ap-southeast-1
  :default_db_options => {
    :engine => 'mysql',
    :engine_version => '5.5',
    :auto_minor_version_upgrade => true,
    :allocated_storage => 5, # 5 - 1024 GB
    :availability_zone => 'us-east-1a',
    :backup_retention_period => 1, # 0 - 8 days
    :preferred_backup_window => '05:30-06:00', # daily, times in UTC
    :preferred_maintenance_window => 'sun:06:00-sun:06:30', # weekly
    :master_username => 'admin',
    :password => 'admin'
  },

  # you can add your own keys and access this hash as CONFIGURATION in the erb templates
  :admin_email => 'YOUR-EMAIL',
  :app_path => '/srv/YOUR-APP'
}.freeze

# This is an example impementation of prepare_private_image. This method is called from
# aws:image:create. You can modify this and/or the scripts that are uploaded in order
# to create your own private AMI. Here we assume you have uploaded your own public key
# to Amazon. Use "ssh -i /path/to/key" if not using your default ssh key.
def Breeze.prepare_private_image(ip_address)
  user_at_host = "ubuntu@#{ip_address}"
  puts("Waiting for the server to accept ssh connections as #{user_at_host}...")
  sleep(2) until system("ssh -q -o 'BatchMode=yes' #{user_at_host} 'echo 2>&1'")
  puts("Uploading scripts...")
  # system("rsync -v -e 'ssh -i /path/to/key' config/breeze/scripts/*.sh #{user_at_host}:./")
  system("rsync -v config/breeze/scripts/*.sh #{user_at_host}:./")
  system("ssh #{user_at_host} 'chmod 600 credentials.sh; chmod 700 deploy.sh; bash install.sh'")
end

# Define Breeze::CONFIGURATION before requiring the tasks!
# This allows us to pick up default options that can be viewed
# with the "thor help" command.
require 'breeze/tasks'
