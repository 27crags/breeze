<%
  @path = "/etc/nginx/nginx.conf"

  %w[ /tmp/nginx ].each do |dir|
    system("mkdir -p #{dir} && chown www-data #{dir}") unless File.directory?(dir)
  end

  passenger_version = "3.0.5"
  server_name = ENV['PUBLIC_SERVER_NAME']
  server_root = "/srv/your-app/public"

  shared_server_conf = <<-END_SHARED_SERVER_CONF

    server_name #{server_name};
    client_max_body_size 20M;

    # redirect www.example.com to example.com
    if ( $host = www.#{server_name} ) {
      rewrite ^\/(.*)$ http://#{server_name}/$1 permanent;
    }

    # let browsers cache static assets
    location ~ ^/(images|javascripts|stylesheets)/ { expires 1y; }

    # static files, page caching and maintenance.html
    try_files $uri $uri/index.html $uri.html /system/maintenance.html @passenger;

    location @passenger {
      passenger_enabled on;
    }

    error_page  500 502 503 504   /500.html;
    error_page  404               /404.html;

  END_SHARED_SERVER_CONF

  @post = <<-POST
    if [ -f /var/run/nginx.pid ]; then
      /etc/init.d/nginx reload
    else
      /etc/init.d/nginx start
    fi
  POST
%>
user www-data;
pid /var/run/nginx.pid;
error_log /var/log/nginx/error.log;

worker_processes 2;
events {
  worker_connections 1024;
  use epoll;
}

http {

  root <%= server_root %>;

  include           /etc/nginx/mime.types;
  default_type      text/html;

  access_log        /var/log/nginx/access.log;

  sendfile          on;
  tcp_nopush        on;
  tcp_nodelay       on;

  gzip              on;
  gzip_disable      "msie6";
  gzip_types        text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  passenger_root /usr/lib/ruby/gems/1.9.1/gems/passenger-<%= passenger_version %>;
  passenger_ruby /usr/bin/ruby;
  passenger_log_level 0;
  passenger_max_pool_size 4; # for micro instances
  passenger_min_instances 2;
  passenger_pool_idle_time 0;
  rails_app_spawner_idle_time 0;
  passenger_pre_start http://<%= server_name %>/;

  server {
    listen 80;
    <%= shared_server_conf %>
  }

  # remove this server block if you don't have ssl certificates
  server {
    listen 443;
    ssl on;
    ssl_certificate     /etc/nginx/YOUR-CERTIFICATE-FILE.crt;
    ssl_certificate_key /etc/nginx/YOUR-CERTIFICATE-FILE.key;
    <%= shared_server_conf.gsub('http://', 'https://') %>
  }

}
